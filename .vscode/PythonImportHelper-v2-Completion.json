[
    {
        "label": "psycopg2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psycopg2",
        "description": "psycopg2",
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "is_string_dtype",
        "importPath": "pandas.api.types",
        "description": "pandas.api.types",
        "isExtraImport": true,
        "detail": "pandas.api.types",
        "documentation": {}
    },
    {
        "label": "is_numeric_dtype",
        "importPath": "pandas.api.types",
        "description": "pandas.api.types",
        "isExtraImport": true,
        "detail": "pandas.api.types",
        "documentation": {}
    },
    {
        "label": "is_bool_dtype",
        "importPath": "pandas.api.types",
        "description": "pandas.api.types",
        "isExtraImport": true,
        "detail": "pandas.api.types",
        "documentation": {}
    },
    {
        "label": "logging",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "logging",
        "description": "logging",
        "detail": "logging",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "date",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "zipfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "zipfile",
        "description": "zipfile",
        "detail": "zipfile",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "JDate",
        "importPath": "datetimejp",
        "description": "datetimejp",
        "isExtraImport": true,
        "detail": "datetimejp",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "urlparse",
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "isExtraImport": true,
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "unicodedata",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "unicodedata",
        "description": "unicodedata",
        "detail": "unicodedata",
        "documentation": {}
    },
    {
        "label": "XmlSchemaParser",
        "importPath": "xbrl_parser.xml_schema_parser",
        "description": "xbrl_parser.xml_schema_parser",
        "isExtraImport": true,
        "detail": "xbrl_parser.xml_schema_parser",
        "documentation": {}
    },
    {
        "label": "XmlSchemaParser",
        "importPath": "xbrl_parser.xml_schema_parser",
        "description": "xbrl_parser.xml_schema_parser",
        "isExtraImport": true,
        "detail": "xbrl_parser.xml_schema_parser",
        "documentation": {}
    },
    {
        "label": "XmlSchemaParser",
        "importPath": "xbrl_parser.xml_schema_parser",
        "description": "xbrl_parser.xml_schema_parser",
        "isExtraImport": true,
        "detail": "xbrl_parser.xml_schema_parser",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "XmlLabelParser",
        "importPath": "xbrl_parser.xml_label_parser",
        "description": "xbrl_parser.xml_label_parser",
        "isExtraImport": true,
        "detail": "xbrl_parser.xml_label_parser",
        "documentation": {}
    },
    {
        "label": "XmlLabelParser",
        "importPath": "xbrl_parser.xml_label_parser",
        "description": "xbrl_parser.xml_label_parser",
        "isExtraImport": true,
        "detail": "xbrl_parser.xml_label_parser",
        "documentation": {}
    },
    {
        "label": "XbrlPathManager",
        "importPath": "xbrl_manager.xbrl_path_manager",
        "description": "xbrl_manager.xbrl_path_manager",
        "isExtraImport": true,
        "detail": "xbrl_manager.xbrl_path_manager",
        "documentation": {}
    },
    {
        "label": "XbrlPathManager",
        "importPath": "xbrl_manager.xbrl_path_manager",
        "description": "xbrl_manager.xbrl_path_manager",
        "isExtraImport": true,
        "detail": "xbrl_manager.xbrl_path_manager",
        "documentation": {}
    },
    {
        "label": "XbrlPathManager",
        "importPath": "xbrl_manager.xbrl_path_manager",
        "description": "xbrl_manager.xbrl_path_manager",
        "isExtraImport": true,
        "detail": "xbrl_manager.xbrl_path_manager",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "XmlLinkParser",
        "importPath": "xbrl_parser.xml_link_parser",
        "description": "xbrl_parser.xml_link_parser",
        "isExtraImport": true,
        "detail": "xbrl_parser.xml_link_parser",
        "documentation": {}
    },
    {
        "label": "PyXBRLToolsLogging",
        "importPath": "log.py_xbrl_tools_loging",
        "description": "log.py_xbrl_tools_loging",
        "isExtraImport": true,
        "detail": "log.py_xbrl_tools_loging",
        "documentation": {}
    },
    {
        "label": "PyXBRLToolsLogging",
        "importPath": "log.py_xbrl_tools_loging",
        "description": "log.py_xbrl_tools_loging",
        "isExtraImport": true,
        "detail": "log.py_xbrl_tools_loging",
        "documentation": {}
    },
    {
        "label": "PyXBRLToolsLogging",
        "importPath": "log.py_xbrl_tools_loging",
        "description": "log.py_xbrl_tools_loging",
        "isExtraImport": true,
        "detail": "log.py_xbrl_tools_loging",
        "documentation": {}
    },
    {
        "label": "PyXBRLToolsLogging",
        "importPath": "log.py_xbrl_tools_loging",
        "description": "log.py_xbrl_tools_loging",
        "isExtraImport": true,
        "detail": "log.py_xbrl_tools_loging",
        "documentation": {}
    },
    {
        "label": "PyXBRLToolsLogging",
        "importPath": "log.py_xbrl_tools_loging",
        "description": "log.py_xbrl_tools_loging",
        "isExtraImport": true,
        "detail": "log.py_xbrl_tools_loging",
        "documentation": {}
    },
    {
        "label": "PyXBRLToolsLogging",
        "importPath": "log.py_xbrl_tools_loging",
        "description": "log.py_xbrl_tools_loging",
        "isExtraImport": true,
        "detail": "log.py_xbrl_tools_loging",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "exceptions",
        "description": "exceptions",
        "isExtraImport": true,
        "detail": "exceptions",
        "documentation": {}
    },
    {
        "label": "Utils",
        "importPath": "utils",
        "description": "utils",
        "isExtraImport": true,
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "Utils",
        "importPath": "utils",
        "description": "utils",
        "isExtraImport": true,
        "detail": "utils",
        "documentation": {}
    },
    {
        "label": "LabelManager",
        "importPath": "label_manager",
        "description": "label_manager",
        "isExtraImport": true,
        "detail": "label_manager",
        "documentation": {}
    },
    {
        "label": "CalculationLinkManager",
        "importPath": "link_managers",
        "description": "link_managers",
        "isExtraImport": true,
        "detail": "link_managers",
        "documentation": {}
    },
    {
        "label": "DefinitionLinkManager",
        "importPath": "link_managers",
        "description": "link_managers",
        "isExtraImport": true,
        "detail": "link_managers",
        "documentation": {}
    },
    {
        "label": "PresentationLinkManager",
        "importPath": "link_managers",
        "description": "link_managers",
        "isExtraImport": true,
        "detail": "link_managers",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "BeautifulSoup",
        "importPath": "bs4",
        "description": "bs4",
        "isExtraImport": true,
        "detail": "bs4",
        "documentation": {}
    },
    {
        "label": "DataFrame",
        "importPath": "pandas",
        "description": "pandas",
        "isExtraImport": true,
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "DataFrame",
        "importPath": "pandas",
        "description": "pandas",
        "isExtraImport": true,
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "DataFrame",
        "importPath": "pandas",
        "description": "pandas",
        "isExtraImport": true,
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "DataFrame",
        "importPath": "pandas",
        "description": "pandas",
        "isExtraImport": true,
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "DataFrame",
        "importPath": "pandas",
        "description": "pandas",
        "isExtraImport": true,
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "Utils",
        "importPath": "utils.utils",
        "description": "utils.utils",
        "isExtraImport": true,
        "detail": "utils.utils",
        "documentation": {}
    },
    {
        "label": "XbrlIxbrlParser",
        "importPath": "xbrl_parser.xbrl_ixbrl_parser",
        "description": "xbrl_parser.xbrl_ixbrl_parser",
        "isExtraImport": true,
        "detail": "xbrl_parser.xbrl_ixbrl_parser",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "XBRLDownloadManager",
        "importPath": "xbrl_manager.xbrl_download_manager",
        "description": "xbrl_manager.xbrl_download_manager",
        "isExtraImport": true,
        "detail": "xbrl_manager.xbrl_download_manager",
        "documentation": {}
    },
    {
        "label": "PostgreSqlConnector",
        "kind": 6,
        "importPath": "PyXBRLTools.db_connector.postgre_sql_connector",
        "description": "PyXBRLTools.db_connector.postgre_sql_connector",
        "peekOfCode": "class PostgreSqlConnector:\n    \"\"\" PostgreSQL database コネクター\n    Attributes:\n    host (str): ホスト名\n    port (int): ポート番号\n    database (str): データベース名\n    user (str): ユーザー名\n    password (str): パスワード\n    connection (psycopg2.extensions.connection): データベース接続オブジェクト\n    \"\"\"",
        "detail": "PyXBRLTools.db_connector.postgre_sql_connector",
        "documentation": {}
    },
    {
        "label": "PyXBRLToolsLogging",
        "kind": 6,
        "importPath": "PyXBRLTools.log.py_xbrl_tools_loging",
        "description": "PyXBRLTools.log.py_xbrl_tools_loging",
        "peekOfCode": "class PyXBRLToolsLogging(object):\n    def __init__(self, log_level=logging.INFO):\n        self.logger = logging.getLogger('PyXBRLTools')\n        self.logger.setLevel(log_level)\n        self.log_level = log_level\n        self.log_format = logging.Formatter('%(asctime)s - %(name)s - %(levelname)s - %(message)s')\n        self.log_console_handler = logging.StreamHandler()\n        self.log_console_handler.setFormatter(self.log_format)\n        self.logger.addHandler(self.log_console_handler)\n        self.log_file_handler = None",
        "detail": "PyXBRLTools.log.py_xbrl_tools_loging",
        "documentation": {}
    },
    {
        "label": "MyException",
        "kind": 6,
        "importPath": "PyXBRLTools.utils.exceptions",
        "description": "PyXBRLTools.utils.exceptions",
        "peekOfCode": "class MyException(Exception):\n    \"\"\"自作例外クラスの基底クラス\n    Args:\n        Exception (_type_): エラーメッセージ\n    \"\"\"\n    def __init__(self, arg: str = \"\") -> None:\n        self.arg = arg\nclass XbrlValueNoneException(MyException):\n    \"\"\"参照したXBRLタグが存在しない場合に発生する例外\n    Args:",
        "detail": "PyXBRLTools.utils.exceptions",
        "documentation": {}
    },
    {
        "label": "XbrlValueNoneException",
        "kind": 6,
        "importPath": "PyXBRLTools.utils.exceptions",
        "description": "PyXBRLTools.utils.exceptions",
        "peekOfCode": "class XbrlValueNoneException(MyException):\n    \"\"\"参照したXBRLタグが存在しない場合に発生する例外\n    Args:\n        MyException (_type_): 自作例外クラス\n    \"\"\"\n    def __init__(self, arg: str = \"\") -> None:\n        super().__init__(arg)\n    def __str__(self) -> str:\n        return f\"XBRLタグ [{self.arg}] の値が存在しません。\"\nclass NoneXbrlZipPathSetting(Exception):",
        "detail": "PyXBRLTools.utils.exceptions",
        "documentation": {}
    },
    {
        "label": "NoneXbrlZipPathSetting",
        "kind": 6,
        "importPath": "PyXBRLTools.utils.exceptions",
        "description": "PyXBRLTools.utils.exceptions",
        "peekOfCode": "class NoneXbrlZipPathSetting(Exception):\n    \"\"\"ZIPファイルのパスが未設定の場合に発生する例外\n    Args:\n        Exception (_type_): 例外基底クラス\n    \"\"\"\n    def __str__(self) -> str:\n        return \"ZIPファイルのパスを指定してください。\"\nclass LinkListEmptyException(MyException):\n    def __init__(self, arg: str = \"\") -> None:\n        super().__init__(arg)",
        "detail": "PyXBRLTools.utils.exceptions",
        "documentation": {}
    },
    {
        "label": "LinkListEmptyException",
        "kind": 6,
        "importPath": "PyXBRLTools.utils.exceptions",
        "description": "PyXBRLTools.utils.exceptions",
        "peekOfCode": "class LinkListEmptyException(MyException):\n    def __init__(self, arg: str = \"\") -> None:\n        super().__init__(arg)\n    def __str__(self) -> str:\n        return f\"リンクファイルが読み込めませんでした。\\n[{self.arg}]\"",
        "detail": "PyXBRLTools.utils.exceptions",
        "documentation": {}
    },
    {
        "label": "Utils",
        "kind": 6,
        "importPath": "PyXBRLTools.utils.utils",
        "description": "PyXBRLTools.utils.utils",
        "peekOfCode": "class Utils:\n    def extract_zip(zip_path, extract_to=None):\n        \"\"\"\n        ZIPファイルを指定されたディレクトリに展開します。\n        Args:\n            zip_path (str): ZIPファイルのパス。\n            extract_to (str, optional): ファイルを展開するディレクトリ。デフォルトはZIPファイルと同じディレクトリ。\n        Raises:\n            FileNotFoundError: ZIPファイルが存在しない場合に発生。\n            Exception: 展開に失敗した場合に発生。",
        "detail": "PyXBRLTools.utils.utils",
        "documentation": {}
    },
    {
        "label": "XBRLDownloadManager",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_download_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_download_manager",
        "peekOfCode": "class XBRLDownloadManager:\n    \"\"\" XBRLファイルをダウンロードするクラスです。\n    Attributes:\n        xbrl_schema_path (str): XBRLスキーマファイルのパス\n        Xbrl_save_dir (str): XBRLファイルの保存ディレクトリ\n        xbrl_files (list): XBRLファイルのリスト\n    Properties:\n        xbrl_schema_path (str): XBRLスキーマファイルのパス\n        Xbrl_save_dir (str): XBRLファイルの保存ディレクトリ\n    Examples:",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_download_manager",
        "documentation": {}
    },
    {
        "label": "BaseXbrlLabelManager",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_label_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_label_manager",
        "peekOfCode": "class BaseXbrlLabelManager(XbrlPathManager):\n    def __init__(self, xbrl_directory_path :str):\n        if xbrl_directory_path is None:\n            raise ValueError('XBRLファイルのディレクトリパスが指定されていません。')\n        super().__init__(xbrl_directory_path)\n        self.__label_path = self.label_path\n        self.__label_parser = XmlLabelParser()\n    @property\n    def label_path(self):\n        return self.__label_path",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_label_manager",
        "documentation": {}
    },
    {
        "label": "XbrlLabelManager",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_label_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_label_manager",
        "peekOfCode": "class XbrlLabelManager(BaseXbrlLabelManager):\n    pass",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_label_manager",
        "documentation": {}
    },
    {
        "label": "XbrlLinkType",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "peekOfCode": "class XbrlLinkType:\n    CAL = 'cal'\n    DEF = 'def'\n    PRE = 'pre'\nclass BaseXbrlLinkManager(ABC):\n    def __init__(self, xbrl_directory_path):\n        # ログ設定\n        class_name = self.__class__.__name__\n        self.logger = PyXBRLToolsLogging(log_level=logging.DEBUG)\n        self.logger.set_log_file(f'Log/{class_name}.log')",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "documentation": {}
    },
    {
        "label": "BaseXbrlLinkManager",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "peekOfCode": "class BaseXbrlLinkManager(ABC):\n    def __init__(self, xbrl_directory_path):\n        # ログ設定\n        class_name = self.__class__.__name__\n        self.logger = PyXBRLToolsLogging(log_level=logging.DEBUG)\n        self.logger.set_log_file(f'Log/{class_name}.log')\n        # XBRLディレクトリのパスを設定\n        self.__xbrl_directory_path = xbrl_directory_path\n        # XBRLディレクトリマネージャを設定\n        try:",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "documentation": {}
    },
    {
        "label": "XbrlLinkManager",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "peekOfCode": "class XbrlLinkManager(BaseXbrlLinkManager):\n    def __init__(self, xbrl_directory_path, link_type):\n        \"\"\" コンストラクタ\n        Args:\n            xbrl_directory_path (str): xbrlディレクトリのパス\n        \"\"\"\n        super().__init__(xbrl_directory_path)\n        # link_typeをXbrlLinkTypeクラスの定数でなければエラー\n        if link_type != XbrlLinkType.CAL and link_type != XbrlLinkType.DEF and link_type != XbrlLinkType.PRE:\n            self.logger.logger.error('link_typeの値が不正です。')",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_link_manager",
        "documentation": {}
    },
    {
        "label": "BaseXbrlPathManager",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_path_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_path_manager",
        "peekOfCode": "class BaseXbrlPathManager(ABC):\n    \"\"\"\n    XBRLディレクトリ内のパスを管理するための基底クラス。\n    Raises:\n        ValueError: ディレクトリパスが有効でない場合に発生\n        ValueError: ディレクトリ内にixbrl.htmファイルが存在しない場合に発生\n    Attributes:\n        xbrl_directory_path (str): XBRLディレクトリへのパス\n        _ixbrl_path (list[dict[str, str]]): iXBRLファイルへのパス\n        _xsd_path (list[dict[str, str]]): XSDファイルへのパス",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_path_manager",
        "documentation": {}
    },
    {
        "label": "XbrlPathManager",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_path_manager",
        "description": "PyXBRLTools.xbrl_manager.xbrl_path_manager",
        "peekOfCode": "class XbrlPathManager(BaseXbrlPathManager):\n    \"\"\"\n    XBRLディレクトリ内のパスを管理するためのクラス。\n    Attributes:\n        xbrl_directory_path (str): XBRLディレクトリへのパス\n    Raises:\n        ValueError: ディレクトリパスが有効でない場合に発生\n        ValueError: ディレクトリ内にixbrl.htmファイルが存在しない場合に発生\n    Properties:\n        xbrl_directory_path (str): XBRLディレクトリへのパス",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_path_manager",
        "documentation": {}
    },
    {
        "label": "XbrlRead",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_manager.xbrl_reader",
        "description": "PyXBRLTools.xbrl_manager.xbrl_reader",
        "peekOfCode": "class XbrlRead:\n    def __init__(self, xbrl_zip_path: str = None):\n        ...\n    def get_company_code(self):\n        ...\n    def company_explain_df(self):\n        ...\n    def to_dataframe(self):\n        ...\n    # add_label_df() の中身は LabelManager を使用するように変更",
        "detail": "PyXBRLTools.xbrl_manager.xbrl_reader",
        "documentation": {}
    },
    {
        "label": "BaseXbrlIxbrlParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xbrl_ixbrl_parser",
        "description": "PyXBRLTools.xbrl_parser.xbrl_ixbrl_parser",
        "peekOfCode": "class BaseXbrlIxbrlParser(ABC):\n    \"\"\"\n    iXBRLファイルを解析するための抽象ベースクラスです。\n    \"\"\"\n    def __init__(self, file_path:str = None) -> None:\n        \"\"\"\n        コンストラクタ。iXBRLファイルを読み込んでBeautifulSoupオブジェクトを初期化します。\n        Args:\n            file_path (str): 解析するiXBRLファイルのパス。\n        \"\"\"",
        "detail": "PyXBRLTools.xbrl_parser.xbrl_ixbrl_parser",
        "documentation": {}
    },
    {
        "label": "XbrlIxbrlParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xbrl_ixbrl_parser",
        "description": "PyXBRLTools.xbrl_parser.xbrl_ixbrl_parser",
        "peekOfCode": "class XbrlIxbrlParser(BaseXbrlIxbrlParser):\n    \"\"\"\n    iXBRLファイルを解析するための具象クラスです。\n    \"\"\"\n    @property\n    def ix_non_fractions(self):\n        \"\"\"非分数データを取得します。\"\"\"\n        # DataFrameがNoneの場合は取得する\n        if self._ix_non_fractions is None:\n            lists = []",
        "detail": "PyXBRLTools.xbrl_parser.xbrl_ixbrl_parser",
        "documentation": {}
    },
    {
        "label": "XbrlParserController",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xbrl_parser_controller",
        "description": "PyXBRLTools.xbrl_parser.xbrl_parser_controller",
        "peekOfCode": "class XbrlParserController:\n    def ixbrl_parser(file_path:str) -> XbrlIxbrlParser:\n        \"\"\" iXBRLパーサを取得します。\"\"\"\n        return XbrlIxbrlParser(file_path)\n    def xml_schema_parser(file_path:str) -> XmlSchemaParser:\n        \"\"\" XMLスキーマパーサを取得します。\"\"\"\n        return XmlSchemaParser(file_path)\n    def xml_label_parser(file_path:str = None) -> XmlLabelParser:\n        \"\"\" XMLラベルパーサを取得します。\"\"\"\n        return XmlLabelParser(file_path)",
        "detail": "PyXBRLTools.xbrl_parser.xbrl_parser_controller",
        "documentation": {}
    },
    {
        "label": "XbrlQualitativeParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xbrl_qualitative_parser",
        "description": "PyXBRLTools.xbrl_parser.xbrl_qualitative_parser",
        "peekOfCode": "class XbrlQualitativeParser:\n    \"\"\"\n    \"qualitative.htm\"から情報を解析して抽出するためのクラスです。\n    \"\"\"\n    def __init__(self, file_path: str = None) -> None:\n        \"\"\"\n        QualitativeParserクラスのコンストラクタです。\n        \"\"\"\n        # ログ設定\n        class_name = self.__class__.__name__",
        "detail": "PyXBRLTools.xbrl_parser.xbrl_qualitative_parser",
        "documentation": {}
    },
    {
        "label": "XbrlRole",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xbrl_roles_definitions",
        "description": "PyXBRLTools.xbrl_parser.xbrl_roles_definitions",
        "peekOfCode": "class XbrlRole:\n    \"\"\"\n    EDINET タクソノミの各科目に対する表示名を設定する定数クラス。\n    \"\"\"\n    # http://www.xbrl.org/2003/role/\n    LABEL = \"http://www.xbrl.org/2003/role/label\"\n    \"\"\"標準ラベル: 標準に設定するラベル\"\"\"\n    VERBOSE_LABEL = \"http://www.xbrl.org/2003/role/verboseLabel\"\n    \"\"\"冗長ラベル: 全ての要素で一意のラベル\"\"\"\n    TOTAL_LABEL = \"http://www.xbrl.org/2003/role/totalLabel\"",
        "detail": "PyXBRLTools.xbrl_parser.xbrl_roles_definitions",
        "documentation": {}
    },
    {
        "label": "ManufacturingXbrlRole",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xbrl_roles_definitions",
        "description": "PyXBRLTools.xbrl_parser.xbrl_roles_definitions",
        "peekOfCode": "class ManufacturingXbrlRole(XbrlRole):\n    INDUSTRY_LABEL = \"http://info.edinet-fsa.go.jp/jp/fr/gaap/manufacturing/role/label\"\n    INDUSTRY_VERBOSE_LABEL = \"http://info.edinet-fsa.go.jp/jp/fr/gaap/manufacturing/role/verboseLabel\"\n    INDUSTRY_TOTAL_LABEL = \"http://info.edinet-fsa.go.jp/jp/fr/gaap/manufacturing/role/totalLabel\"\n    INDUSTRY_NEGATIVE_LABEL = \"http://info.edinet-fsa.go.jp/jp/fr/gaap/manufacturing/role/negativeLabel\"\n    INDUSTRY_DOCUMENTATION = \"http://info.edinet-fsa.go.jp/jp/fr/gaap/manufacturing/role/documentation\"",
        "detail": "PyXBRLTools.xbrl_parser.xbrl_roles_definitions",
        "documentation": {}
    },
    {
        "label": "BaseXmlLabelParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xml_label_parser",
        "description": "PyXBRLTools.xbrl_parser.xml_label_parser",
        "peekOfCode": "class BaseXmlLabelParser(ABC):\n    \"\"\"\n    XMLラベルパーサの基底クラス。\n    Attributes:\n        file_path (str): パースするXMLファイルのパス。\n    Properties:\n        link_labels (DataFrame): link:label要素を取得するプロパティ。\n        link_locs (DataFrame): link:loc要素を取得するプロパティ。\n        link_label_arcs (DataFrame): link:labelArc要素を取得するプロパティ。\n        role_refs (DataFrame): roleRef要素を取得するプロパティ。",
        "detail": "PyXBRLTools.xbrl_parser.xml_label_parser",
        "documentation": {}
    },
    {
        "label": "XmlLabelParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xml_label_parser",
        "description": "PyXBRLTools.xbrl_parser.xml_label_parser",
        "peekOfCode": "class XmlLabelParser(BaseXmlLabelParser):\n    \"\"\" XMLラベルパーサの具象クラス。XMLラベルの情報を取得するクラス。\n    Attributes:\n        file_path (str): パースするXMLファイルのパス。\n    Properties:\n        link_labels (DataFrame): link:label要素を取得するプロパティ。\n        link_locs (DataFrame): link:loc要素を取得するプロパティ。\n        link_label_arcs (DataFrame): link:labelArc要素を取得するプロパティ。\n        role_refs (DataFrame): roleRef要素を取得するプロパティ。\n    Methods:",
        "detail": "PyXBRLTools.xbrl_parser.xml_label_parser",
        "documentation": {}
    },
    {
        "label": "BaseXmlLinkParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xml_link_parser",
        "description": "PyXBRLTools.xbrl_parser.xml_link_parser",
        "peekOfCode": "class BaseXmlLinkParser(ABC):\n    \"\"\"\n    XMLラベルパーサの基底クラス。\n    Attributes:\\n\n        file_path (str): パースするXMLファイルのパス。\\n\n    Properties:\\n\n        link_roles (DataFrame): link:role要素を取得するプロパティ。\\n\n        link_locs (dict[str, DataFrame]): link:loc要素を取得するプロパティ。\\n\n        link_arcs (dict[str, DataFrame]): link:labelArc要素を取得するプロパティ。\\n\n        link_base (DataFrame): link:base要素を取得するプロパティ。\\n",
        "detail": "PyXBRLTools.xbrl_parser.xml_link_parser",
        "documentation": {}
    },
    {
        "label": "XmlLinkParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xml_link_parser",
        "description": "PyXBRLTools.xbrl_parser.xml_link_parser",
        "peekOfCode": "class XmlLinkParser(BaseXmlLinkParser):\n    \"\"\" BaseXmlLabelParserを継承して具体的な実装を行うクラス。\n    Attributes:\\n\n        file_path (str): パースするXMLファイルのパス。\\n\n    Properties:\\n\n        link_roles (DataFrame): link:role要素を取得するプロパティ。\\n\n        link_locs (dict[str, DataFrame]): link:loc要素を取得するプロパティ。\\n\n        link_arcs (dict[str, DataFrame]): link:labelArc要素を取得するプロパティ。\\n\n        link_base (DataFrame): link:base要素を取得するプロパティ。\\n\n        link (DataFrame): link要素を取得するプロパティ。\\n",
        "detail": "PyXBRLTools.xbrl_parser.xml_link_parser",
        "documentation": {}
    },
    {
        "label": "BaseXmlSchemaParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xml_schema_parser",
        "description": "PyXBRLTools.xbrl_parser.xml_schema_parser",
        "peekOfCode": "class BaseXmlSchemaParser(ABC):\n    \"\"\" XMLスキーマパーサの基底クラスです。\n    XMLスキーマの情報を取得するクラスです。\n    \"\"\"\n    def __init__(self, file_path:str = None) -> None:\n        \"\"\" BaseXmlSchemaParserのコンストラクタです。\n        Args:\n            file_path (str): XMLファイルのパス。\n        \"\"\"\n        # ログ設定",
        "detail": "PyXBRLTools.xbrl_parser.xml_schema_parser",
        "documentation": {}
    },
    {
        "label": "XmlSchemaParser",
        "kind": 6,
        "importPath": "PyXBRLTools.xbrl_parser.xml_schema_parser",
        "description": "PyXBRLTools.xbrl_parser.xml_schema_parser",
        "peekOfCode": "class XmlSchemaParser(BaseXmlSchemaParser):\n    \"\"\"\n    XMLスキーマパーサの具象クラスです。\n    XMLスキーマの情報を取得するクラスです。\n    Attributes:\n        file_path (str): XMLファイルのパス。\n        soup (BeautifulSoup): BeautifulSoupのインスタンス。\n        _import_schemas (DataFrame): importスキーマテーブルのDataFrame。\n        _link_base_refs (DataFrame): link_base_refsテーブルのDataFrame。\n        _elements (DataFrame): elementsテーブルのDataFrame。",
        "detail": "PyXBRLTools.xbrl_parser.xml_schema_parser",
        "documentation": {}
    }
]